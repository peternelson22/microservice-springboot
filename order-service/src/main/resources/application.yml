server:
  port: 8081
spring-boot:
  version: 3.02
spring:
  application:
    name: order-service
    title: Order Service
    version: 1.0
  datasource:
    url: jdbc:postgresql://localhost:5432/techie_order
    username: postgres
    password: 1234
  jpa:
    hibernate:
      ddl-auto: update
  zipkin:
    base-url: http://localhost:9411
  sleuth:
    sampler:
      probability: '1.0'
  kafka:
    producer:
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring:
          json:
            type:
              mapping: event:com.nelson.orderservice.event.OrderPlaceEvent
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
    template:
      default-topic: notificationTopic
    bootstrap-servers: localhost:9092

eureka:
  client:
    serviceUrl:
      defaultZone: http://eureka:password@localhost:8761/eureka

management:
  endpoints:
    web:
      exposure:
        include: '*'
  health:
    circuitbreakers:
      enabled: 'true'
  endpoint:
    health:
      show-details: always
resilience4j:
  circuitbreaker:
    instances:
      inventory:
        automaticTransitionFromOpenToHalfOpenEnabled: 'true'
        failureRateThreshold: '50'
        slidingWindowType: COUNT_BASED
        event-consumer-buffer-size: '10'
        registerHealthIndicator: 'true'
        waitDurationInOpenState: 5s
        permittedNumberOfCallsInHalfOpenState: '3'
        slidingWindowSize: '5'
  retry:
    instances:
      inventory:
        wait-duration: 5s
        max-attempts: '3'
    timelimiter:
      instances:
        inventory:
          timeout-duration: 1s

